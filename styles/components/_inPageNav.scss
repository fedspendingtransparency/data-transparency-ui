@import "../global/index";

.usda-in-page-nav__container {
  height: rem(34);
  width: 100%;
  background-color: $theme-color-headline-inverse;
  border-bottom: $theme-color-body-inverse 2px solid;
  position: sticky;
  top: 60px;

  .usda-in-page-nav__wrapper {
    height: rem(34);
    display: flex;
    align-items: center;
    flex-direction: row;
    list-style-type: none;
    max-width: 100%;

    @media(min-width: $medium-screen) {
      margin: 0 rem(20);
    }
    @media(min-width: $large-screen) {
      margin: 0 rem(40);
    }
    @media(min-width: $x-large-screen) {
      margin: 0 auto;
      width: rem(1600);
    }

    // for some reason IntelliJ thinks this linear-gradient is not valid, but it does compile and it does work
    &.left-fade-effect {
      @media(min-width: $medium-screen) {
        margin: 0 rem(2);
      }
      @media(min-width: $large-screen) {
        margin: 0 rem(8);
      }
      @media(min-width: $x-large-screen) {
        margin: 0 auto;
        width: rem(1600);
      }
      ul {
        @media(min-width: $medium-screen) {
          -webkit-mask-image: linear-gradient(to right, transparent, rgba(0, 0, 0, 1) 20px);
          mask-image: linear-gradient(to right, transparent, rgba(0, 0, 0, 1) 20px);
        }
        @media(min-width: $large-screen) {
          -webkit-mask-image: linear-gradient(to right, transparent, rgba(0, 0, 0, 1) 40px);
          mask-image: linear-gradient(to right, transparent, rgba(0, 0, 0, 1) 40px);
        }
      }
    }

    &.right-fade-effect {
      ul {
        -webkit-mask-image: linear-gradient(to left, transparent, rgba(0, 0, 0, 1) 16px);
        mask-image: linear-gradient(to left, transparent, rgba(0, 0, 0, 1) 16px);

        @media(min-width: $medium-screen) {
          -webkit-mask-image: linear-gradient(to left, transparent, rgba(0, 0, 0, 1) 20px);
          mask-image: linear-gradient(to left, transparent, rgba(0, 0, 0, 1) 20px);
        }
        @media(min-width: $large-screen) {
          -webkit-mask-image: linear-gradient(to left, transparent, rgba(0, 0, 0, 1) 40px);
          mask-image: linear-gradient(to left, transparent, rgba(0, 0, 0, 1) 40px);
        }
      }
    }

    // when both classes are present we need to apply the fade effect to both sides
    // but listing both linear-gradient rules from above did not work
    // so we're approximating the px values with percentages here, and slightly different syntax
    // we're removing the left fade effect up to 992px
    &.left-fade-effect.right-fade-effect {
      ul {
        -webkit-mask-image: linear-gradient(to left, transparent, rgba(0, 0, 0, 1) 16px);
        mask-image: linear-gradient(to left, transparent, rgba(0, 0, 0, 1) 16px);

        @media(min-width: $tablet-screen) {
          -webkit-mask-image: linear-gradient(to left, transparent, rgba(0, 0, 0, 1) 32px);
          mask-image: linear-gradient(to left, transparent, rgba(0, 0, 0, 1) 32px);
        }

        @media(min-width: $medium-screen) {
          -webkit-mask-image: linear-gradient(to left, transparent, black 6%, black 94%, transparent 100%);
          mask-image: linear-gradient(to left, transparent, black 6%, black 94%, transparent 100%);
        }

        @media(min-width: $large-screen) {
          -webkit-mask-image: linear-gradient(to left, transparent, black 8%, black 92%, transparent 100%);;
          mask-image: linear-gradient(to left, transparent, black 8%, black 92%, transparent 100%);;
        }
      }
    }

    .usda-in-page-nav__paginator {
      @media(max-width: 991px) {
        display: none;
      }
      display: flex;
      justify-content: center;
      align-items: center;
      width: rem(24);
      height: rem(24);
      background-color: $theme-color-headline-inverse;
      border-radius: 50%;
      cursor: pointer;

      &:hover, &:focus {
        background-color: $theme-color-body-inverse;
      }

      &.left {
        margin: 0 $global-margin 0 0;
      }

      &.right {
        margin: 0 0 0 $global-margin;
      }

      svg {
        cursor: pointer;
        width: rem(8);
        height: rem(18);
        color: $theme-color-1;

        &:hover {
          color: $blue-vivid-70;
        }
      }
    }

    ul {
      display: flex;
      justify-content: flex-start;
      height: 100%;
      font-size: $font-size-14;
      line-height: rem(18);
      scroll-behavior: smooth;
      margin: 0;
      padding-left: 0;
      overflow-x: auto;
      overflow-y: hidden;
      width: 100%;
      white-space: nowrap;
      max-width: 1600px;
      scroll-snap-type: x mandatory;
      -ms-overflow-style: none; /* IE and Edge */
      scrollbar-width: none;

      @media (max-width: 991px) {
        display: flex;
        align-items: center;
        margin: 0 0 0 rem(20);
        width: 100%;
        overflow-x: auto;
        overflow-y: hidden;
        white-space: nowrap;
        scroll-snap-type: x mandatory;
        -ms-overflow-style: none; /* IE and Edge */
        scrollbar-width: none;
      }
    }

    li {
      display: inline;
      cursor: pointer;
      margin: 0 $global-margin * 4 0 0;
      padding-top: rem(6);
      height: 100%;

      &.active {
        font-weight: $font-semibold;
        border-bottom: $theme-color-3 2px solid;
      }

      a {
        color: $theme-color-headline;
      }

      a:hover {
        font-weight: $font-semibold;
      }
    }
  }
}

.usda-in-page-nav__wrapper ul::-webkit-scrollbar {
  width: 0;
  height: 0;
  background: transparent; /* Chrome/Safari/Webkit */
  scrollbar-width: none; /* Firefox */
  -ms-overflow-style: none; /* IE 10+ */
  display: none;
}
